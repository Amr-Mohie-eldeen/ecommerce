version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: mini_pg
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: app
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: mini_redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: mini_zk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: mini_kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: mini_schema_registry
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    ports:
      - "8081:8081"

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: mini_opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - os_data:/usr/share/opensearch/data

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: mini_os_dash
    depends_on:
      - opensearch
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
    ports:
      - "5601:5601"

  jaeger:
    image: jaegertracing/all-in-one:1.54
    container_name: mini_jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686" # UI
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP

  catalog-api:
    build:
      context: ../apps/catalog-api
    container_name: mini_catalog_api
    depends_on:
      - postgres
      - redis
      - kafka
      - schema-registry
      - opensearch
      - jaeger
    env_file:
      - ../.env
      - ../apps/catalog-api/.env.example
    environment:
      - PORT=8001
    ports:
      - "8001:8001"

  orders-api:
    build:
      context: ../apps/orders-api
    container_name: mini_orders_api
    depends_on:
      - postgres
      - kafka
      - jaeger
    env_file:
      - ../.env
      - ../apps/orders-api/.env.example
    environment:
      - PORT=8002
    ports:
      - "8002:8002"

  recommender-svc:
    build:
      context: ../apps/recommender-svc
    container_name: mini_recommender
    depends_on:
      - redis
      - opensearch
      - jaeger
    env_file:
      - ../.env
      - ../apps/recommender-svc/.env.example
    environment:
      - PORT=8003
    ports:
      - "8003:8003"

  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: mini_prometheus
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.1.3
    container_name: mini_grafana
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"

  indexer-worker:
    build:
      context: ../apps/indexer-worker
    container_name: mini_indexer_worker
    depends_on:
      - kafka
      - schema-registry
      - opensearch
      - jaeger
    env_file:
      - ../.env
      - ../apps/indexer-worker/.env.example

volumes:
  pg_data:
  kafka_data:
  os_data:
